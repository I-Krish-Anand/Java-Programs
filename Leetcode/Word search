class Solution {
    int i=0,j=0,k=0;
    public boolean exist(char[][] board, String word)
     {
        for(int i=0;i<board.length;i++)
        {
            boolean[][]map=new boolean[board.length][board[0].length];
            for(int j=0;j<board[0].length;j++)
            {
               if( isexist(board,word,i,j,0,map))
               return true;
               map=new boolean[board.length][board[0].length];
            }
        }
        return false;
        
     }
     static boolean isexist(char[][] board,String word,int i,int j,int k,boolean[][]map)
     {
        if(k==word.length())
        return true;

        if(i==board.length || j==board[0].length||i<0||j<0)
        return false;

        if(word.charAt(k)!=board[i][j] || map[i][j])
        return false;

        map[i][j]=true;
    
        if(isexist(board,word,i,j+1,k+1,map))
        return true;
        if(isexist(board,word,i+1,j,k+1,map))
        return true;
        if(isexist(board,word,i,j-1,k+1,map))
        return true;
        if(isexist(board,word,i-1,j,k+1,map))
        return true;
        map[i][j]=false;
        return false;
    }
     
}
